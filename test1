(in /Users/fumi/github/rdf-4store)
** WARNING: Ruby 1.9 Support is experimental at best. Don't expect correct results! **

RDF::FourStore::Repository 4store when counting statements when counting items
- should respond to #empty?
- should respond to #count and #size
- should implement #empty?
- should implement #count and #size

RDF::FourStore::Repository 4store when enumerating statements when counting statements
- should respond to #empty?
- should respond to #count and #size
- should implement #empty?
- should implement #count and #size

RDF::FourStore::Repository 4store when enumerating statements when enumerating statements
- should respond to #statements
- should respond to #has_statement?
- should respond to #each_statement
- should respond to #enum_statement
- should implement #statements (FAILED - 1)
- should implement #has_statement? (FAILED - 2)
- should implement #each_statement (FAILED - 3)
- should implement #enum_statement (FAILED - 4)

RDF::FourStore::Repository 4store when enumerating statements when enumerating triples
- should respond to #triples
- should respond to #has_triple?
- should respond to #each_triple
- should respond to #enum_triple
- should implement #triples (FAILED - 5)
- should implement #has_triple?
- should implement #each_triple (FAILED - 6)
- should implement #enum_triple (FAILED - 7)

RDF::FourStore::Repository 4store when enumerating statements when enumerating quads
- should respond to #quads
- should respond to #has_quad?
- should respond to #each_quad
- should respond to #enum_quad
- should implement #quads (FAILED - 8)
- should implement #has_quad?
- should implement #each_quad (FAILED - 9)
- should implement #enum_quad (FAILED - 10)

RDF::FourStore::Repository 4store when enumerating statements when enumerating subjects
- should respond to #subjects
- should respond to #has_subject?
- should respond to #each_subject
- should respond to #enum_subject
- should implement #subjects
- should implement #has_subject? (FAILED - 11)
- should implement #each_subject (FAILED - 12)
- should implement #enum_subject

RDF::FourStore::Repository 4store when enumerating statements when enumerating predicates
- should respond to #predicates
- should respond to #has_predicate?
- should respond to #each_predicate
- should respond to #enum_predicate
- should implement #predicates
- should implement #has_predicate? (FAILED - 13)
- should implement #each_predicate
- should implement #enum_predicate

RDF::FourStore::Repository 4store when enumerating statements when enumerating objects
- should respond to #objects
- should respond to #has_object?
- should respond to #each_object
- should respond to #enum_object
- should implement #objects
- should implement #has_object? (FAILED - 14)
- should implement #each_object (FAILED - 15)
- should implement #enum_object

RDF::FourStore::Repository 4store when enumerating statements when enumerating contexts
- should respond to #contexts
- should respond to #has_context?
- should respond to #each_context
- should respond to #enum_context
- should implement #contexts (FAILED - 16)
- should implement #has_context? (FAILED - 17)
- should implement #each_context (FAILED - 18)
- should implement #enum_context (FAILED - 19)

RDF::FourStore::Repository 4store when enumerating statements when enumerating graphs
- should respond to #each_graph
- should respond to #enum_graph
- should implement #each_graph (FAILED - 20)
- should implement #enum_graph (FAILED - 21)

RDF::FourStore::Repository 4store when enumerating statements when converting
- should respond to #to_hash
- should implement #to_hash (FAILED - 22)

RDF::FourStore::Repository 4store when querying statements
- should respond to #query
- should respond to #query_pattern
- should respond to #first
- should respond to #first_subject
- should respond to #first_predicate
- should respond to #first_object
- should respond to #first_literal
- should respond to #first_value

RDF::FourStore::Repository 4store when querying statements#query when called
- should require an argument
- should accept a pattern argument
- should accept a statement argument
- should accept a triple argument
- should accept a quad argument
- should accept a hash argument
- should not alter a given hash argument
- should reject other kinds of arguments

RDF::FourStore::Repository 4store when querying statements#query when called with a block
- should yield statements (FAILED - 23)

RDF::FourStore::Repository 4store when querying statements#query when called without a block
- should return an enumerator
- should return an enumerable enumerator
- should return a queryable enumerator
- should return statements (FAILED - 24)
- should return the correct number of results for array queries (FAILED - 25)
- should return the correct number of results for hash queries (FAILED - 26)

RDF::FourStore::Repository 4store when querying statements#query_pattern when called
- should require an argument
- should call the given block (FAILED - 27)
- should yield statements (FAILED - 28)

RDF::FourStore::Repository 4store when querying statements#first
- should be callable without a pattern (FAILED - 29)
- should return the correct value when the pattern matches (FAILED - 30)
- should return nil when the pattern fails to match anything (FAILED - 31)
- should return nil when self is empty

RDF::FourStore::Repository 4store when querying statements#first_subject
- should be callable without a pattern (FAILED - 32)
- should return the correct value when the pattern matches (FAILED - 33)
- should return nil when the pattern fails to match anything (FAILED - 34)
- should return nil when self is empty

RDF::FourStore::Repository 4store when querying statements#first_predicate
- should be callable without a pattern (FAILED - 35)
- should return the correct value when the pattern matches (FAILED - 36)
- should return nil when the pattern fails to match anything (FAILED - 37)
- should return nil when self is empty

RDF::FourStore::Repository 4store when querying statements#first_object
- should be callable without a pattern (FAILED - 38)
- should return the correct value when the pattern matches (FAILED - 39)
- should return nil when the pattern fails to match anything (FAILED - 40)
- should return nil when self is empty

RDF::FourStore::Repository 4store when querying statements#first_literal
- should be callable without a pattern
- should return the correct value when the pattern matches
- should return nil when the pattern fails to match anything
- should return nil when self is empty

RDF::FourStore::Repository 4store when querying statements#first_value
- should be callable without a pattern (FAILED - 41)
- should return the correct value when the pattern matches (FAILED - 42)
- should return nil when the pattern fails to match anything (FAILED - 43)
- should return nil when self is empty

RDF::FourStore::Repository 4store when updating
- should be empty initially
- should be readable
- should be writable
- should be mutable
- should support #load

RDF::FourStore::Repository 4store when updating#load
- should require an argument
- should accept a string filename argument
- should accept an optional hash argument
- should load statements
- should load statements with a context override (FAILED - 44)

RDF::FourStore::Repository 4store when updating when inserting statements
- should support #insert
- should not raise errors
- should support inserting one statement at a time
- should support inserting multiple statements at a time
- should insert statements successfully
- should not insert a statement twice (FAILED - 45)
- should treat statements with a different context as distinct

RDF::FourStore::Repository 4store when updating when deleting statements
- should support #delete
- should not raise errors
- should support deleting one statement at a time
- should support deleting multiple statements at a time (FAILED - 46)
- should support wildcard deletions (FAILED - 47)
- should only delete statements when the context matches

RDF::FourStore::Repository 4store when updating when clearing all statements
- should support #clear

RDF::FourStore::Repository 4store as a durable repository
- should support #durable?
- should support #nondurable?
- should not be both durable and nondurable
- should save contents between instantiations

1)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating statements should implement #statements'
undefined method `each_statement' for nil:NilClass


2)
'RDF::FourStore::Repository 4store when enumerating statements when enumerating statements should implement #has_statement?' FAILED
expected true to be false


3)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating statements should implement #each_statement'
undefined method `each_statement' for nil:NilClass


4)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating statements should implement #enum_statement'
undefined method `each_statement' for nil:NilClass


5)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating triples should implement #triples'
undefined method `each_statement' for nil:NilClass


6)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating triples should implement #each_triple'
undefined method `each_statement' for nil:NilClass


7)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating triples should implement #enum_triple'
undefined method `each_statement' for nil:NilClass


8)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating quads should implement #quads'
undefined method `each_statement' for nil:NilClass


9)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating quads should implement #each_quad'
undefined method `each_statement' for nil:NilClass


10)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating quads should implement #enum_quad'
undefined method `each_statement' for nil:NilClass


11)
'RDF::FourStore::Repository 4store when enumerating statements when enumerating subjects should implement #has_subject?' FAILED
expected true to be false


12)
'RDF::FourStore::Repository 4store when enumerating statements when enumerating subjects should implement #each_subject' FAILED
expected: 6,
     got: 12 (using ==)


13)
'RDF::FourStore::Repository 4store when enumerating statements when enumerating predicates should implement #has_predicate?' FAILED
expected true to be false


14)
'RDF::FourStore::Repository 4store when enumerating statements when enumerating objects should implement #has_object?' FAILED
expected true to be false


15)
'RDF::FourStore::Repository 4store when enumerating statements when enumerating objects should implement #each_object' FAILED
expected [#<RDF::URI:0x81306888(http://xmlns.com/foaf/0.1/Person)>, #<RDF::URI:0x812eef14(http://datagraph.org/bendiken/foaf)>, #<RDF::URI:0x812cbce4(http://ar.to/)>, #<RDF::URI:0x812b3a94(http://rubygems.org/gems/rdf)>, #<RDF::URI:0x812ad744(mailto:arto.bendiken@gmail.com)>, #<RDF::Literal:0x812a6220("a033f652c84a4d73b8c26d318c2395699dd2bdfb")>, #<RDF::Literal:0x812a1910("d0737cceb55eb7d740578d2db1bc0727e3ed49ce")>, #<RDF::Literal:0x8129b1ec("Arto Bendiken")>, #<RDF::URI:0x812923bc(http://datagraph.org/bhuga/foaf)>, #<RDF::URI:0x81290618(http://bhuga.net/)>, #<RDF::URI:0x81282c1c(mailto:blavender@gmail.com)>, #<RDF::Literal:0x81275798("dbf45f4ffbd27b67aa84f02a6a31c144727d10af")>, #<RDF::Literal:0x8126e124("Ben Lavender")>, #<RDF::URI:0x8126bcf0(http://ar.to/#self)>, #<RDF::URI:0x81250b28(http://blog.datagraph.org/)>, #<RDF::URI:0x8124c774(http://github.com/bendiken/rdf/issues)>, #<RDF::URI:0x8124aa5c(http://dbpedia.org/resource/Resource_Description_Framework)>, #<RDF::URI:0x8123d5f4(http://dbpedia.org/resource/Ruby_(programming_language))>, #<RDF::Literal:0x81234818("2007-10-23")>, #<RDF::Literal:0x812334f4("RDF.rb is a pure-Ruby library for working with Resource Description Framework (RDF) data."@en)>, #<RDF::URI:0x812306e8(http://bhuga.net/#ben)>, #<RDF::URI:0x8122de1c(http://rubyforge.org/projects/rdf/)>, #<RDF::Node:0x8122aa7c(_:genid1)>, #<RDF::Node:0x81227ff0(_:genid2)>, #<RDF::Node:0x81224240(_:genid3)>, #<RDF::URI:0x81222cd0(http://rdf.rubyforge.org/)>, #<RDF::URI:0x8121919c(http://creativecommons.org/licenses/publicdomain/)>, #<RDF::Literal:0x812117fc("RDF.rb")>, #<RDF::Literal:0x8120b58c("Ruby")>, #<RDF::Literal:0x811f818c("A Ruby library for working with Resource Description Framework (RDF) data."@en)>, #<RDF::URI:0x811f6cfc(http://datagraph.org/)>, #<RDF::URI:0x811f06d4(http://usefulinc.com/ns/doap#Project)>, #<RDF::Literal:0x811da6dc("c69f3255ff0639543cc5edfd8116eac8df16fab8")>, #<RDF::Literal:0x811d94ec("Hellekin O. Wolf")>, #<RDF::Literal:0x811d72cc("f7653fc1ac0e82ebb32f092389bd5fc728eaae12")>, #<RDF::Literal:0x811d606c("John Fieber")>, #<RDF::Literal:0x811d374c("bedbbf2451e5beb38d59687c0460032aff92cd3c")>, #<RDF::Literal:0x811d2540("Pius Uzamere")>] to include #<RDF::Literal:0x8103efe8("A Ruby library for working with Resource Description Framework (RDF) data."@EN)>


16)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating contexts should implement #contexts'
undefined method `each_statement' for nil:NilClass


17)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating contexts should implement #has_context?'
undefined method `each_statement' for nil:NilClass


18)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating contexts should implement #each_context'
undefined method `each_statement' for nil:NilClass


19)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating contexts should implement #enum_context'
undefined method `each_statement' for nil:NilClass


20)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating graphs should implement #each_graph'
undefined method `each_statement' for nil:NilClass


21)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when enumerating graphs should implement #enum_graph'
undefined method `each_statement' for nil:NilClass


22)
NoMethodError in 'RDF::FourStore::Repository 4store when enumerating statements when converting should implement #to_hash'
undefined method `each_statement' for nil:NilClass


23)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#query when called with a block should yield statements'
undefined method `each_statement' for nil:NilClass


24)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#query when called without a block should return statements'
undefined method `each_statement' for nil:NilClass


25)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#query when called without a block should return the correct number of results for array queries'
undefined method `each_statement' for nil:NilClass
(eval):2:in `size'

26)
'RDF::FourStore::Repository 4store when querying statements#query when called without a block should return the correct number of results for hash queries' FAILED
expected: 47,
     got: 0 (using ==)


27)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#query_pattern when called should call the given block'
undefined method `each_statement' for nil:NilClass


28)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#query_pattern when called should yield statements'
undefined method `each_statement' for nil:NilClass


29)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first should be callable without a pattern'
undefined method `each_statement' for nil:NilClass


30)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first should return the correct value when the pattern matches'
undefined method `each_statement' for nil:NilClass


31)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first should return nil when the pattern fails to match anything'
undefined method `each_statement' for []:Array


32)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first_subject should be callable without a pattern'
undefined method `each_statement' for nil:NilClass


33)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first_subject should return the correct value when the pattern matches'
undefined method `each_statement' for nil:NilClass


34)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first_subject should return nil when the pattern fails to match anything'
undefined method `each_statement' for nil:NilClass


35)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first_predicate should be callable without a pattern'
undefined method `each_statement' for nil:NilClass


36)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first_predicate should return the correct value when the pattern matches'
undefined method `each_statement' for nil:NilClass


37)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first_predicate should return nil when the pattern fails to match anything'
undefined method `each_statement' for []:Array


38)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first_object should be callable without a pattern'
undefined method `each_statement' for nil:NilClass


39)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first_object should return the correct value when the pattern matches'
undefined method `each_statement' for nil:NilClass


40)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first_object should return nil when the pattern fails to match anything'
undefined method `each_statement' for nil:NilClass


41)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first_value should be callable without a pattern'
undefined method `each_statement' for nil:NilClass


42)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first_value should return the correct value when the pattern matches'
undefined method `each_statement' for nil:NilClass


43)
NoMethodError in 'RDF::FourStore::Repository 4store when querying statements#first_value should return nil when the pattern fails to match anything'
undefined method `each_statement' for nil:NilClass


44)
NoMethodError in 'RDF::FourStore::Repository 4store when updating#load should load statements with a context override'
undefined method `each_statement' for nil:NilClass


45)
'RDF::FourStore::Repository 4store when updating when inserting statements should not insert a statement twice' FAILED
expected: 1,
     got: 2 (using ==)


46)
'RDF::FourStore::Repository 4store when updating when deleting statements should support deleting multiple statements at a time' FAILED
expected #<RDF::Statement:0x81893e38(<http://rubygems.org/gems/rdf> <http://usefulinc.com/ns/doap#description> RDF.rb is a pure-Ruby library for working with Resource Description Framework (RDF) data. .)> to be false


47)
NoMethodError in 'RDF::FourStore::Repository 4store when updating when deleting statements should support wildcard deletions'
undefined method `each_statement' for nil:NilClass


Finished in 40.24703 seconds

148 examples, 47 failures
